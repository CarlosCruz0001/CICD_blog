name: Node.js CI
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'


  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js for Backend
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Install Backend Dependencies
      working-directory: ./blog-api
      run: npm install

    - name: Run Backend Tests
      working-directory: ./blog-api
      run: npm test

    - name: Cypress test for Backend
      uses: cypress-io/github-action@v5
      with:
        start: npm start
        wait-on: http://localhost:3000
        wait-on-timeout: 120
      env:
        CI: false


  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js for Frontend
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Install Frontend Dependencies
      working-directory: ./blog-frontend
      run: npm install

    - name: Cypress test for Frontend
      uses: cypress-io/github-action@v5
      with:
        start: npm start
        wait-on: http://localhost:3001
        wait-on-timeout: 120
      env:
        CI: false
        
    - name: Install Vercel CLI
      run: npm install --global vercel@latest

    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

    - name: Build Project Artifacts
      run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

    - name: Deploy Project Artifacts to Vercel
      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
